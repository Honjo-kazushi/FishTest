/* ===================================================================
   css/style.css
   外部に分離したスタイル定義ファイル
   =================================================================== */
:root {
  --gap: 1rem;  /* 全体の間隔をこの変数で管理 */
}
/* ── 全要素を border-box に統一 ── */
*,
*::before,
*::after {
  box-sizing: border-box;
}
/* ───────────────────────────────────────────
   6. Utilities（小規模ユーティリティ）
   ─────────────────────────────────────────── */
.mx-auto {
  margin: 0 auto !important;  /* 横中央寄せ */
}

/* ===================================================================
   1. リセット＆ベース
   =================================================================== */
html, body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  background: #eef6fb;
}

/* Audio Modal */
.modal {
  position: fixed; inset: 0;
  background: rgba(0,0,0,0.7);
  display: flex; align-items: center; justify-content: center;
  z-index: 1000;
}
.modal-content {
  background: #fff; padding: 1.5rem; border-radius: .5rem;
  text-align: center; max-width: 90%;
}
.modal-content button {
  margin: .5rem; padding: .5rem 1rem; cursor: pointer;
}

/* ===================================================================
   2. レイアウト
   =================================================================== */
/* ────────────────────────────────── */
/* PC／タブレット含む全体でプレイヤー幅を最大608pxに制限 */
/* ────────────────────────────────── */
#playerContainer {
  width: 100%;        /* コンテナ幅は親にフィット */
  max-width: 608px;   /* 最大幅を608pxに */
  margin: 0 auto;     /* 中央寄せ */
  position: relative;                  /* もしまだ無ければ追加 */
  aspect-ratio: 16 / 9;      /* 動画比率 */
  overflow: hidden;    /* はみ出し要素を隠す */
  /* background は不要なら指定しなくてOK */
}
.container {
  display: flex;
  flex-direction: row-reverse;
  flex-wrap: nowrap;
  align-items: flex-start;
  gap: var(--gap);

  /* ────────────────────────────────── */
  /* コンテナ幅を 1208px に固定し、画面幅以下で縮小 */
  /* ────────────────────────────────── */
  width: 100%;
  max-width: 1208px;  /* 左パネル600 + 右パネル608 */
  margin: 0 auto;     /* ← 画面中央に配置 */
}

/* 共通 */
.left-panel,
.right-panel {
  padding: 1rem;
  display: flex;
  flex-direction: column;
}

/* 個別 */
.left-panel {
  flex: 0 0 600px;
  max-width: 600px;
}

.right-panel {
  flex: 0 0 608px;
  max-width: 608px;
  overflow: hidden;
  margin: 0 auto;
}

/* ===================================================================
   3. コンポーネント
   =================================================================== */
#player {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

#currentFishImage {
  width: 150px;
  height: 150px;
  object-fit: contain;
  display: block;
  margin: 10px auto;
}

.video-meta {
  display: flex;
  justify-content: flex-start;
  gap: 1rem;
  font-size: 0.8rem;
  color: #333;
  margin: 2px 0;
  padding: 0 1rem;
  flex-wrap: wrap;
}

.player-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: auto;
  max-height: 100%;
  z-index: 2;
  transition: opacity 0.3s ease;
}
.controls {
  display:flex;
  align-items:center;
  justify-content:flex-start;   /* ← まずは左寄せに戻す */
  gap:0.5rem;
  padding:10px;
  background:#e0f0f7;
  width:100%;
  max-width:640px;              /* ← プレイヤーと同じ幅 */
  margin:0 auto;                /* ← 画面中央に配置 */
  box-sizing:border-box;        /* ← paddingを幅に含めてはみ出し防止 */
  flex-wrap:wrap;               /* ← 幅が足りない時は2段に逃がす */
}

.toggle-button {
  appearance: none;
  width: 40px;
  height: 20px;
  background: #ccc;
  border-radius: 10px;
  position: relative;
  outline: none;
  cursor: pointer;
}
.toggle-button:checked {
  background: #4caf50;
}
.toggle-button::before {
  content: "";
  position: absolute;
  top: 2px;
  left: 2px;
  width: 16px;
  height: 16px;
  background: white;
  border-radius: 50%;
  transition: 0.2s;
}
.toggle-button:checked::before {
  transform: translateX(20px);
}

/* トグルスイッチ用ラベル */
.toggle-label {
  margin-right: 10px;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}

.fish-header {
  display: flex;
  align-items: flex-start;
  gap: 1rem;
}

.fish-info {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.25rem;
}

.fish-feature {
  align-self: flex-start;
  width: 100%;
  text-align: left;
  margin-bottom: 0.5rem;
}

#fishIcon {
  width: 150px;
  height: 150px;
  object-fit: contain;
  border-radius: 10px;
  margin-top: 10px;
  align-self: flex-start;
}

.icon-bar {
  display: flex;
  overflow-x: auto;
  padding: 0.2rem;
  background: #dff0f7;
  border-top: 1px solid #ccc;
  gap: 4px;
}

.icon-bar::-webkit-scrollbar {
  display: none;
}

.fish-icon {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  gap: 1px;
  width: 80px;
  cursor: pointer;
}
.fish-icon img {
  width: 80px;
  height: 80px;
  object-fit: contain;
}
.fish-icon span,
.fish-label {
  display: block;
  margin-top: 1px;
  font-size: 0.7rem;
  white-space: normal;
  line-height: 1.1;
  color: #333;
  text-align: center;
}

.fish-icon-wrapper {
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  gap: 1px;
  margin: 2px 4px;
}

.filter-panel.small {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
  align-items: flex-start;
  margin: 1rem 0;
  width: 100%;
  box-sizing: border-box;
}

.select-clear-wrapper {
  display: inline-flex;
  align-items: center;
  gap: 4px;
}
.select-clear-wrapper select,
.select-clear-wrapper select[size] {
  width: 200px !important;
  min-width: 120px !important;
}
.dropup select[size] {
  width: auto !important;
  min-width: 120px !important;
}
.dropup.select-clear-wrapper select[size] {
  width: auto !important;
  min-width: 120px !important;
}
#filters {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.5rem;
}

.dropup {
  position: relative;
  display: inline-block;
}
.dropup select[size] {
  position: absolute;
  bottom: 100%;
  left: 0;
  z-index: 1000;
  background: #fff;
  box-shadow: 0 2px 6px rgba(0,0,0,0.2);
}

.kana-buttons button {
  transition: box-shadow 0.1s, transform 0.1s;
}
.kana-buttons button.active {
  box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.3);
  transform: translateY(2px);
}

.header-image {
  max-height: 200px;
  object-fit: cover;
  width: 100%;
}

/* ===================================================================
   4. メディアクエリ（スマホ向け）
   =================================================================== */

/* モバイル縦表示（ポートレート：~768px） */
@media (max-width: 768px) and (orientation: portrait) {
  /* 右パネルを上、左パネルを下に縦並び、隙間ナシ */
  .container {
    flex-direction: column-reverse;
    gap: 0;
  }
  .left-panel,
  .right-panel {
    flex: none;
    width: 100%;
    margin: 0;
  }
  #player {
    width: 100% !important;
    height: auto !important;
  }
    /* プレイヤー高さを2倍近くに拡大 */
  html body #playerContainer {
    height: calc(100vw * 9 / 8) !important;
  }
  html body #player {
    height: 100% !important;
  }
  .controls {
    flex-wrap: wrap;
    justify-content: center;
    gap: 0.3rem;
    padding: 0.5rem 1rem;
  }
  .controls button {
    flex: 0 0 calc(25% - 0.3rem);
    padding: 0.3rem 0.5rem;
    font-size: 0.8rem;
    box-sizing: border-box;
    min-width: 0;
  }
  .icon-bar {
    display: flex;
    gap: 0.5rem;
    padding: 0.5rem 1rem;
    -webkit-overflow-scrolling: touch;
  }
  .icon-bar::-webkit-scrollbar {
    display: none;
  }
  .fish-icon img {
    width: 60px;
    height: 60px;
  }
  .fish-label {
    font-size: 0.6rem;
  }
  .video-meta {
    flex-direction: column;
    align-items: center;
    font-size: 0.7rem;
    line-height: 1.4;
    gap: 0.25rem;
    padding: 0.5rem 1rem;
  }
}

/* モバイル横表示（ランドスケープ：~950px） */
@media only screen and (orientation: landscape) and (max-width: 950px) {
  /* コンテナはそのまま縦スタック */
  html body .container {
    display: flex !important;
    flex-wrap: wrap !important;
    flex-direction: column-reverse !important;
    gap: var(--gap) !important;
  }
  html body #playerContainer {
    height: 80vh !important;
    width: 90vw !important;
    max-width: none !important;
    margin: 0 auto !important;
  }

  html body #player {
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
  }

  html body .left-panel,
  html body .right-panel {
    flex: none !important;
    width: 100% !important;
    max-width: 100% !important;
    margin: 0 !important;
  }
}
